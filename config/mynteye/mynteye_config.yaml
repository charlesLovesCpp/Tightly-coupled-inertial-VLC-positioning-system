%YAML:1.0

#common parameters
imu_topic: "/imu"
image_topic: "/left/image_raw_color"
output_path: "/config/mynteye/vins_result.csv"         # vins outputs will be wrttento vins_folder_path + output_path
april_output_path: "/config/mynteye/"

#camera calibration 
model_type: PINHOLE
camera_name: camera
image_width: 752
image_height: 480
distortion_parameters:
   k1: -4.9215364045317128e-01
   k2: 4.7706462210281025e-01
   p1: 0.
   p2: 0.
projection_parameters:
   fx: 6.9683989755329958e+02
   fy: 7.0852425211889431e+02
   cx: 4.0412072749757999e+02
   cy: 2.3900734568345044e+02

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning. 
ex_calib_result_path: "/config/mynteye/ex_calib_result.yaml"  # If you choose 1 or 2, the extrinsic calibration result will be written vins_folder_path + ex_calib_result_path.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [0, -1, 0, 
           1, 0, 0, 
           0, 0, 1]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [-0.00218296788001,-0.0541376819758, 0.0164]

#feature traker paprameters
max_cnt: 120            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 0             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.2          # accelerometer measurement noise standard deviation. #0.2
gyr_n: 0.02         # gyroscope measurement noise standard deviation.     #0.05
acc_w: 0.0002         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 2.0e-5       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81007     # gravity magnitude


#loop closure parameters
loop_closure: 1   #if you want to use loop closure to minimize the drift, set loop_closure true and give your brief pattern file path and vocabulary file path accordingly;
                     #also give the camera calibration file same as feature_tracker node
pattern_file: "/support_files/brief_pattern.yml"
voc_file: "/support_files/brief_k10L6.bin"
min_loop_num: 25

#positioning
#metric_scale: 100    # 1m in real world corresponds to 100 in F_w

#tag information x_right->plus, y_up->plus
total_tag_num: 10

tag_id_0: 0
tag_size_0: 16.15
tag_position_0: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [4.5, -8.6, 0]

tag_id_1: 1
tag_size_1: 16.15
tag_position_1: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [129.8, -8.6, 0]

tag_id_2: 2
tag_size_2: 16.15
tag_position_2: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [4.5, -65.2, 0]

tag_id_3: 3
tag_size_3: 16.15
tag_position_3: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [129.3, -65, 0]

tag_id_4: 4
tag_size_4: 5.2
tag_position_4: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [62.5, -58, 0]

tag_id_5: 5
tag_size_5: 5.2
tag_position_5: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [141.6, -62.6, 0]

tag_id_6: 6
tag_size_6: 5.2
tag_position_6: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [26.3, -27.3, 0]


tag_id_7: 7
tag_size_7: 5.2
tag_position_7: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [68.2, -32.7, 0]


tag_id_8: 8
tag_size_8: 5.2
tag_position_8: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [3, -3.4, 0]

tag_id_9: 9
tag_size_9: 4.2
tag_position_9: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [0, -39.4, 0]
